// middleware.ts
import { NextResponse } from "next/server";
import type { NextRequest } from "next/server";
import { getToken } from "next-auth/jwt";

export async function middleware(req: NextRequest) {
  const token = await getToken({ req });
  const pathname = req.nextUrl.pathname;

  // ‚úÖ ‡∏´‡∏ô‡πâ‡∏≤‡∏ó‡∏µ‡πà‡πÄ‡∏Ç‡πâ‡∏≤‡∏ñ‡∏∂‡∏á‡πÑ‡∏î‡πâ‡πÇ‡∏î‡∏¢‡πÑ‡∏°‡πà‡∏ï‡πâ‡∏≠‡∏á login
  const publicPaths = ["/", "/login", "/register", "/dashboard/board"];
  const isPublic = publicPaths.some((path) => pathname.startsWith(path));

  // ‚úÖ ‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πà public path ‡πÅ‡∏•‡∏∞‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ token ‚Üí redirect ‡πÑ‡∏õ login
  if (!isPublic && !token) {
    const loginUrl = new URL("/login", req.url);
    loginUrl.searchParams.set("redirectBack", pathname); // üîÅ ‡∏Å‡∏•‡∏±‡∏ö‡∏°‡∏≤‡∏¢‡∏±‡∏á path ‡πÄ‡∏î‡∏¥‡∏°‡πÑ‡∏î‡πâ

    return NextResponse.redirect(loginUrl);
  }

  return NextResponse.next();
}
